# Generated by Django 4.2.3 on 2024-05-24 09:15

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('has_finished', models.BooleanField(default=False)),
                ('year', models.DateField()),
                ('group_index', models.CharField(max_length=10)),
            ],
            options={
                'verbose_name': 'Группа',
                'verbose_name_plural': 'Группы',
                'db_table': 'Groups',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Param',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('value', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'Параметр',
                'verbose_name_plural': 'Параметры',
                'db_table': 'Params',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=70)),
            ],
            options={
                'verbose_name': 'Предмет',
                'verbose_name_plural': 'Предметы',
                'db_table': 'Subjects',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TelegramUser',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, to=settings.AUTH_USER_MODEL)),
                ('chat_id', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='calendar_module.group')),
            ],
            options={
                'verbose_name': 'Студент',
                'verbose_name_plural': 'Студенты',
                'db_table': 'Students',
                'managed': True,
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lesson_number', models.SmallIntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], default=1)),
                ('for_numerator', models.BooleanField(choices=[(False, 'Знаменатель'), (True, 'Числитель')], default=False)),
                ('week_day_number', models.SmallIntegerField(choices=[(0, 'ПН'), (1, 'ВТ'), (2, 'СР'), (3, 'ЧТ'), (4, 'ПТ'), (5, 'СБ'), (6, 'ВС')], default=1)),
                ('type', models.IntegerField(choices=[(0, 'Лекция'), (1, 'Лабораторная работа'), (2, 'Семинар')], default=1)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='calendar_module.group')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='calendar_module.subject')),
            ],
            options={
                'verbose_name': 'Урок',
                'verbose_name_plural': 'Уроки',
                'db_table': 'Lessons',
                'managed': True,
            },
        ),
    ]
